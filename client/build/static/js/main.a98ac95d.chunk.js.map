{"version":3,"sources":["hooks/message.hook.js","hooks/http.hook.js","context/AuthContext.js","pages/TablePage.js","hooks/get.users.hook.js","pages/AuthPage.js","hooks/login.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useMessage","useCallback","text","window","M","toast","html","useHttp","useState","loading","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","TablePage","rows","setRows","selectionModel","setSelectionModel","auth","useContext","blockHandler","unblockHandler","deleteHandler","useEffect","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","onerror","send","then","Object","assign","map","item","id","_id","registerAt","moment","format","style","height","width","className","marginRight","disabled","onClick","columns","field","headerName","pageSize","checkboxSelection","onSelectionModelChange","newSelection","AuthPage","username","email","password","form","setForm","changeHandler","event","target","name","value","registerHandler","loginHandler","placeholder","type","onChange","htmlFor","storageName","Navbar","history","useHistory","href","preventDefault","push","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useLogin","routes","path","exact","to","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a98ac95d.chunk.js","sourcesContent":["import {useCallback} from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text })\r\n        }\r\n    }, [])\r\n}","import {useState, useCallback} from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Smth went wrong')\r\n            }\r\n\r\n            setLoading(false)\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","import { createContext } from \"react\"\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useMessage } from \"../hooks/message.hook\"\r\nimport { useHttp } from \"../hooks/http.hook\"\r\nimport { getUsers } from \"../hooks/get.users.hook\"\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport moment from 'moment'\r\n\r\nexport const TablePage = () => {\r\n    const { loading, request } = useHttp()\r\n    const message = useMessage()\r\n    const [rows, setRows] = useState([])\r\n    const [selectionModel, setSelectionModel] = useState([])\r\n    const auth = useContext(AuthContext)\r\n\r\n    const blockHandler = async () => {\r\n        try {\r\n            const data = await request('/block', 'POST', selectionModel)\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const unblockHandler = async () => {\r\n        try {\r\n            const data = await request('/unblock', 'POST', selectionModel)\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const deleteHandler = async () => {\r\n        try {\r\n            const data = await request('/delete', 'POST', selectionModel)\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers('GET', '/table').then(data => {\r\n            let rows = Object.assign([], data.map(item => {\r\n                item.id = item._id\r\n                item.registerAt = moment(item.registerAt).format('DD.MM.YYYY HH:mm')\r\n\r\n                if (auth.userId === item._id && item.status === 'BLOCKED') auth.logout(auth.userId)\r\n\r\n                return item\r\n            }))\r\n\r\n            setRows(rows)\r\n        })\r\n    }, [blockHandler, unblockHandler, deleteHandler])\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 220 },\r\n        { field: 'username', headerName: 'Username', width: 130 },\r\n        { field: 'email', headerName: 'Email', width: 200 },\r\n        { field: 'registerAt', headerName: 'RegisterAt', width: 170 },\r\n        { field: 'status', headerName: 'Status', width: 130 },\r\n\r\n    ];\r\n\r\n    return (\r\n        <div style={{ height: 800, width: '100%' }}>\r\n            <button className=\"btn orange darken-3\"\r\n                    style={{ marginRight: 5 }}\r\n                    disabled={loading}\r\n                    onClick={blockHandler}>\r\n                        Block\r\n                    </button>\r\n            <button className=\"btn green\"\r\n                            style={{ marginRight: 5 }}\r\n                            disabled={loading}\r\n                            onClick={unblockHandler}>\r\n                        UnBlock\r\n                    </button>\r\n            <button className=\"btn red\"\r\n                    disabled={loading}\r\n                    onClick={deleteHandler}>\r\n                        Delete\r\n                    </button>\r\n            <DataGrid rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                      onSelectionModelChange={(newSelection) => {\r\n                          setSelectionModel(newSelection.selectionModel);\r\n                      }}\r\n                      selectionModel={selectionModel}/>\r\n        </div>\r\n    )\r\n}\r\n","export const getUsers = (method, url) => {\r\n    return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open(method, url)\r\n        xhr.responseType = 'json'\r\n\r\n        xhr.onload= () => {\r\n            if (xhr.status >= 400) {\r\n                reject(xhr.response)\r\n            } else { resolve(xhr.response) }\r\n        }\r\n\r\n        xhr.onerror = () => {\r\n            reject(xhr.response)\r\n        }\r\n\r\n        xhr.send()\r\n    })\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useHttp } from \"../hooks/http.hook\"\r\nimport { useMessage } from \"../hooks/message.hook\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { loading, request, error, clearError } = useHttp()\r\n    const [form, setForm] = useState({\r\n        username: null, email: null, password: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/register', 'POST', {...form})\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <div className=\"card blue lighten-2\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Welcome! LogIn or create new account</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Enter username\"\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    className=\"black-input\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"username\">Username</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Enter email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"black-input\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Enter password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"black-input\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-action\">\r\n                      <button className=\"btn orange darken-3\"\r\n                              style={{marginRight: 10}}\r\n                              disabled={loading}\r\n                              onClick={loginHandler}>\r\n                          LogIn\r\n                      </button>\r\n                        <button className=\"btn light-green accent-3\"\r\n                                onClick={registerHandler}\r\n                                disabled={loading}>\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import { useState, useCallback, useEffect } from \"react\"\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useLogin = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) login(data.token, data.userId)\r\n    }, [login])\r\n    return { login, logout, token, userId }\r\n}","import React, { useContext } from \"react\"\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue lighten-2\">\r\n                <div className=\"brand-logo\">ILearning</div>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down oran\">\r\n                    <li><a href=\"/\" onClick={logoutHandler}>Logout</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\"\nimport 'materialize-css'\nimport { useRoutes } from \"./routes\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { useLogin } from \"./hooks/login.hook\"\nimport { AuthContext } from \"./context/AuthContext\"\nimport { Navbar } from \"./components/Navbar\"\n\nfunction App() {\n    const { token, userId, login, logout } = useLogin()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n    return (\n        <AuthContext.Provider value={{ token, userId, login, logout, isAuthenticated }}>\n        <Router>\n            { isAuthenticated && <Navbar />}\n            <div className=\"container\">\n                { routes }\n            </div>\n        </Router>\n        </AuthContext.Provider>\n  );\n}\n\nexport default App\n","import React from \"react\"\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { TablePage } from \"./pages/TablePage\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\n\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/table\" exact>\r\n                    <TablePage />\r\n                </Route>\r\n                <Redirect to=\"/table\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}